{
    "info": {
        "_postman_id": "78a380a0-3658-4d9a-b8f3-88f9c3919d3f",
        "name": "My Collection",
        "description": "### Welcome to Postman! This is your first collection. \n\nCollections are your starting point for building and testing APIs. You can use this one to:\n\n• Group related requests\n• Test your API in real-world scenarios\n• Document and share your requests\n\nUpdate the name and overview whenever you’re ready to make it yours.\n\n[Learn more about Postman Collections.](https://learning.postman.com/docs/collections/collections-overview/)",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "47902768",
        "_collection_link": "https://my-inh-l-m-huy-n-s-team-110567.postman.co/workspace/Team-Workspace~4e48fd56-87ad-4f79-8d91-42ae42a640c0/collection/47902768-78a380a0-3658-4d9a-b8f3-88f9c3919d3f?action=share&source=collection_link&creator=47902768"
    },
    "item": [
        {
            "name": "favorites",
            "item": [
                {
                    "name": "favorites",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "// Parse response JSON",
                                    "let jsonData;",
                                    "try {",
                                    "    jsonData = pm.response.json();",
                                    "} catch (e) {",
                                    "    pm.test(\"Response is valid JSON\", function () {",
                                    "        pm.expect.fail(\"Response is not JSON: \" + e.message);",
                                    "    });",
                                    "}",
                                    "",
                                    "// Test: Check status code",
                                    "pm.test(\"Check API status\", function () {",
                                    "    pm.response.to.have.status(parseInt(pm.iterationData.get(\"expectedStatus\")));",
                                    "    if (pm.response.code === 200) {",
                                    "        console.log(\"Success: Product created successfully\");",
                                    "    } else if (pm.response.code === 422) {",
                                    "        console.log(\"Failed: Product already exists\");",
                                    "    }",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript",
                                "packages": {}
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"product_id\": \"{{product_id}}\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/favorites",
                            "host": ["{{baseUrl}}"],
                            "path": ["favorites"]
                        }
                    },
                    "response": []
                }
            ],
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "{{token}}",
                        "type": "string"
                    }
                ]
            },
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "packages": {},
                        "exec": [""]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "packages": {},
                        "exec": [""]
                    }
                }
            ]
        },
        {
            "name": "payment/check",
            "item": [
                {
                    "name": "payment/check",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "// Parse response JSON",
                                    "let jsonData;",
                                    "try {",
                                    "    jsonData = pm.response.json();",
                                    "} catch (e) {",
                                    "    pm.test(\"Response is valid JSON\", function () {",
                                    "        pm.expect.fail(\"Response is not JSON: \" + e.message);",
                                    "    });",
                                    "}",
                                    "",
                                    "// Test 1: Status code phải là 200 (thành công)",
                                    "pm.test(\"Status code\", function () {",
                                    "    pm.response.to.have.status(parseInt(pm.iterationData.get(\"expectedStatus\")));",
                                    "});",
                                    "",
                                    "// Test 2: API phải trả về message hoặc success flag",
                                    "pm.test(\"Response has success message\", function () {",
                                    "    if (pm.response.code === 200) {",
                                    "        pm.expect(jsonData).to.have.property(\"message\");",
                                    "        pm.expect(jsonData.message).to.be.oneOf([\"Payment was successful\"]);",
                                    "    }",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript",
                                "packages": {}
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"method\": \"{{payment_method}}\", \"account_name\": \"{{acc_name}}\", \"account_number\": \"{{acc_number}}\"}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/payment/check",
                            "host": ["{{baseUrl}}"],
                            "path": ["payment", "check"]
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "invoices",
            "item": [
                {
                    "name": "invoices",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Invoice API Response\", function () {",
                                    "    pm.response.to.have.status(parseInt(pm.iterationData.get(\"expectedStatus\")));",
                                    "    if (pm.response.code === 200) {",
                                    "        console.log(\"Success: Invoice exists\");",
                                    "    } else if (pm.response.code === 400) {",
                                    "        console.log(\"Failed: Invoice does not exist\");",
                                    "    }",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript",
                                "packages": {}
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/invoices/{{invoice_id}}",
                            "host": ["{{baseUrl}}"],
                            "path": ["invoices", "{{invoice_id}}"]
                        }
                    },
                    "response": []
                }
            ]
        }
    ],
    "variable": [
        {
            "key": "invoice_id",
            "value": "",
            "type": "default"
        }
    ]
}